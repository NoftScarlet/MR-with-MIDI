{"version":3,"sources":["score/interval C Position broken.js","score/single note C position.js","score/single note G position.js","logic/DisplayLC.js","logic/CreateScoreWithBlanksLC.js","logic/utilFunctions.js","logic/EventRecorderDB.js","logic/EventRecorder.js","header/header.js","body/body.js","App.js","serviceWorker.js","index.js"],"names":["intervalCPositionBroken","scoreID","scoreIDformatted","noteGroupFormatVariant","score","imageSizeFactor","staffWidth","eventDuration","eventName","ptKeyName","eventID","singleNoteCPosition","singleNoteGPosition","DisplayLC","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","display","abcjs","renderAbc","scale","staffwidth","bind","assertThisInitialized","react_default","a","createElement","id","style","textAlign","marginTop","React","Component","CreateScoreWithBlanksLC","clearAsyncFunctions","index","timeoutID","length","window","clearTimeout","setState","loopScoreSets","scoreSet","loopLocation","loopLength","location","parseInt","_loop","i","_accum","_id","setTimeout","accum","state","nextProps","participantID","hoverShow","prevProps","prevState","snapshot","reset","console","log","midiEvent","logic_DisplayLC","saveCSV","csvData","csvContent","forEach","rowArray","row","join","encodedUri","encodeURI","dl","document","download","href","click","calculate","playTimes","playedNotesArray","compTime","iniTime","caseNumber","case2additional","idealNoteCounts","indexOf","dbWrite","db","require","low","defaults","posts","user","count","write","get","push","title","set","update","n","EventRecorder","initPlayeTimeAndNotesArray","EventRecorderDB","clearCSV","appendScoreSetData","tempArr2","utilFunctions","performance","now","tempArr","toString","Date","appendMIDIData","event","data","pNoteIndex","playedNote","noteMap","tempArr3","tempArr4","recordData","notes","map","currElement","Header","initMIDIAccess","navigator","requestMIDIAccess","then","onSuccess","onFailure","access","midi","inputs","size","values","next","value","onmidimessage","handleMIDIMessage","err","scoreSetSwitcher","elementID","scoreSetTemp","reload","handleMouseDown","target","handleKeyDown","key","preventDefault","showing","keyLock","j","toFixed","inputValue","evt","addEventListener","_this2","opacity","onMouseEnter","onMouseLeave","Button","color","onClick","logic_CreateScoreWithBlanksLC","EventRecorder_EventRecorder","paddingTop","zIndex","position","type","onChange","updateInputValue","margin","Body","App","className","header_Header","body_Body","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24481cb0.chunk.js","sourcesContent":["export const intervalCPositionBroken = [\n    {scoreID: \"intervalCPositionBroken\", scoreIDformatted:\"intervalCPositionBroken\",noteGroupFormatVariant:[\"C5=\",\"C5=\",\"C5=\",\"C5=\",\"C5=\",\"C5=\",\"C5=\"]},//add prefix to ensure the ID is unique in DOM\n\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:1000, eventName: \"blank screen\", ptKeyName:\"1\", eventID:0},// assign keys on keyboard to ptKeyName for practice / test round. For example, press key \"1\" for practice 1, press key \"2\" for practice 2, press \"t\" for actual test.\n    {score:\" G G G|\", imageSizeFactor:\"1.2\", staffWidth:\"60\" , eventDuration:300, eventName: \"Practice 1 shows on screen\", eventID:0},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\" , eventDuration:1000, eventName: \"blank screen\", eventID:0},\n    {score:\"G d G|\", imageSizeFactor:\"1.2\", staffWidth:\"60\",  eventDuration:500, eventName: \"Practice 2 shows on screen\", eventID:0},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:1000, eventName: \"blank screen\", eventID:0},\n    {score:\"|G E G|\", imageSizeFactor:\"1.2\", staffWidth:\"60\", eventDuration:3000, eventName:\"Practice 3 shows on screen\", eventID:0 },\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:1000, eventName: \"blank screen\", eventID:0},\n    {eventID:-99},//This marks end of a loop\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:100, eventName: \"blank screen\", ptKeyName:\"2\", eventID:1},\n    {score:\"|C C C|\", imageSizeFactor:\"1.2\", staffWidth:\"60\", eventDuration:300, eventName:\"Test-1\", eventID:1},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:100, eventName: \"blank screen\", eventID:2},\n    {score:\"|d d d|\", imageSizeFactor:\"1.2\", staffWidth:\"60\", eventDuration:300, eventName:\"Test-2\", eventID:2},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:100, eventName: \"blank screen\", eventID:3},\n\n    {score:-1, eventID:-99},//This marks the end\n];\n\nexport default {\n    intervalCPositionBroken,\n}\n\n","export const singleNoteCPosition = [\n    {scoreID: \"singleNoteCPosition\", scoreIDformatted:\"singleNoteCPosition\",noteGroupFormatVariant:[\"\",\"C4=E4=C4=\",\"F4=\",\"D4=\",\"G4=\",\"E4=\",\"C4=\",\"G4=\",\"D4=\",\"F4=\"]},//add prefix to ensure the ID is unique in DOM\n\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", ptKeyName:\"1\", eventID:1},// assign keys on keyboard to ptKeyName for practice / test round. For example, press key \"1\" for practice 1, press key \"2\" for practice 2, press \"t\" for actual test.\n    {score:\"y1/2C2\", imageSizeFactor:\"1.6\", staffWidth:\"110\" , eventDuration:1000, eventName: \"Practice 1 shows on screen\", eventID:1},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\" , eventDuration:2000, eventName: \"blank screen\", eventID:1},\n    {score:\"y1/2E2\", imageSizeFactor:\"1.6\", staffWidth:\"110\",  eventDuration:1000, eventName: \"Practice 2 shows on screen\", eventID:1},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:1},\n    {score:\"y1/2C2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Practice 3 shows on screen\", eventID:1 },\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:1},\n    {eventID:-99},//This marks end of a loop\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", ptKeyName:\"2\", eventID:2},\n    {score:\"y1/2F2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-1\", eventID:2},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:3},\n    {score:\"y1/2D2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-2\", eventID:3},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:4},\n    {score:\"y1/2G2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-3\", eventID:4},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:5},\n    {score:\"y1/2E2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-4\", eventID:5},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:6},\n    {score:\"y1/2C2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-5\", eventID:6},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:7},\n    {score:\"y1/2G2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-6\", eventID:7},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:8},\n    {score:\"y1/2D2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-7\", eventID:8},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:9},\n    {score:\"y1/2F2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-8\", eventID:9},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:10},\n    {score:-1, eventID:-99},//This marks the end\n];\n\nexport default {\n    singleNoteCPosition,\n}","export const singleNoteGPosition = [\n    {scoreID: \"singleNoteGPosition\", scoreIDformatted:\"singleNoteGPosition\",noteGroupFormatVariant:[\"\",\"practice-G4=A4=G4=\",\"B4=\",\"G4=\",\"C5=\",\"A4=\",\"C5=\",\"G4=\",\"D5=\",\"B4=\"]},//add prefix to ensure the ID is unique in DOM\n\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", ptKeyName:\"1\", eventID:1},// assign keys on keyboard to ptKeyName for practice / test round. For example, press key \"1\" for practice 1, press key \"2\" for practice 2, press \"t\" for actual test.\n    {score:\"y1/2G2\", imageSizeFactor:\"1.6\", staffWidth:\"110\" , eventDuration:1000, eventName: \"Practice 1 shows on screen\", eventID:1},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\" , eventDuration:2000, eventName: \"blank screen\", eventID:1},\n    {score:\"y1/2A2\", imageSizeFactor:\"1.6\", staffWidth:\"110\",  eventDuration:1000, eventName: \"Practice 2 shows on screen\", eventID:1},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:1},\n    {score:\"y1/2G2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Practice 3 shows on screen\", eventID:1 },\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:1},\n    {eventID:-99},//This marks end of a loop\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", ptKeyName:\"2\", eventID:2},\n    {score:\"y1/2B2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-1\", eventID:2},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:3},\n    {score:\"y1/2G2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-2\", eventID:3},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:4},\n    {score:\"y1/2c2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-3\", eventID:4},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:5},\n    {score:\"y1/2A2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-4\", eventID:5},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:6},\n    {score:\"y1/2c2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-5\", eventID:6},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:7},\n    {score:\"y1/2G2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-6\", eventID:7},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:8},\n    {score:\"y1/2d2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-7\", eventID:8},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:9},\n    {score:\"y1/2B2\", imageSizeFactor:\"1.6\", staffWidth:\"110\", eventDuration:1000, eventName:\"Test-8\", eventID:9},\n    {score:\"\", imageSizeFactor:\"\", staffWidth:\"\", eventDuration:2000, eventName: \"blank screen\", eventID:10},\n    {score:-1, eventID:-99},//This marks the end\n];\n\nexport default {\n    singleNoteGPosition,\n}","//Logic Component - the most basic display unit\n\nimport React from \"react\";\nimport abcjs from \"abcjs\";\n\nclass DisplayLC extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.display = this.display.bind(this);\n    }\n\n    display = (score,imageSizeFactor,staffWidth) =>{\n            abcjs.renderAbc(\"scoreLoopBundle\",score, {\n                scale: imageSizeFactor,\n                staffwidth: staffWidth,\n\n\n            });\n    };\n\n    render () {\n        return (//note we need to set onkeydown as global event listener, because we need to change view anytime when user press key \"1\".\n\n            <div id=\"display\" style={{textAlign : 'center' ,marginTop:'15%'}}>\n                {this.display(this.props.score,this.props.imageSizeFactor,this.props.staffWidth)}\n                <div id=\"scoreLoopBundle\"></div>\n            </div>\n        )\n    }\n}\nexport default DisplayLC;","//Logic Component\n//read score arrays and pass them onto child for display cycle.\nimport React from \"react\";\nimport DisplayLC from \"./DisplayLC\";\n\nclass CreateScoreWithBlanksLC extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.loopScoreSets = this.loopScoreSets.bind(this);\n        this.timeoutID = [];\n\n        this.state={\n            score: \"\",\n            imageSizeFactor:\"1\",\n            staffWidth: \"1\",\n            eventDuration: 1,\n            scoreIDformatted:\"\",\n        };\n    }\n\n    clearAsyncFunctions= () =>{\n        let index = this.timeoutID.length;\n        while (index--) {\n            window.clearTimeout(this.timeoutID[index]);\n        }\n\n        this.setState({\n            score: \"\",\n            scoreIDformatted:\"\",\n        });\n\n    };\n\n\n    loopScoreSets = (scoreSet, ptKeyName, loopLocation, loopLength) => {\n\n\n        let location = parseInt(loopLocation);\n        let length = parseInt(loopLength);\n\n\n        for ( let i=location, accum=0, id=0; i< location+length; i++) {\n\n            this.timeoutID[id++]=setTimeout(()=>{//this changes score parameters (states). Child display component \"DisplayLC\" receives it as props\n                this.setState({\n                    score:scoreSet[i][\"score\"],\n                    imageSizeFactor:scoreSet[i][\"imageSizeFactor\"],\n                    staffWidth:scoreSet[i][\"staffWidth\"]\n                });\n\n            },accum);\n\n\n            this.timeoutID[id++]=setTimeout(()=>{//this empties the score display area after each eventDuration. we set empty parameters to do this.\n               this.setState({\n                    score:\"\",\n                    imageSizeFactor:\"\",\n                    staffWidth:\"\"\n                });\n\n            },accum+=scoreSet[i][\"eventDuration\"]);\n        }\n    };\n\n    shouldComponentUpdate(nextProps) {\n\n        return ((this.props.participantID === nextProps.participantID) && (this.props.hoverShow === nextProps.hoverShow));\n    }\n\n\n    /* The component receives props from header and re-renders itself. As a result componentDidUpdate gets triggered every time the component receives props, regardless of what's inside the props.\n    In componentDidUpdate, we check what's inside the new props.*/\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props !== prevProps ){ //we have to add condition here, to prevent infinity loop\n            if(this.props.reset === true ){ //we have to add condition here, to prevent infinity loop\n                console.log(\"catch\");\n                this.clearAsyncFunctions();\n            }\n            else if (this.props.midiEvent !== 0){\n                //do nothing. It's used to prevent this component re-render itself on parent midiEvent state change, this should be moved under shouldComponentUpdate\n                console.log(\"midi, no re-rendering\")\n            }\n            else {\n\n                this.loopScoreSets(this.props.scoreSet,this.props.ptKeyName,this.props.loopLocation,this.props.loopLength)\n            }\n\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <DisplayLC score={this.state.score} imageSizeFactor={this.state.imageSizeFactor} staffWidth= {this.state.staffWidth}/>\n            </div>\n        );\n    }\n}\n\nexport default CreateScoreWithBlanksLC;","const saveCSV =(csvData, participantID, scoreID) => {\n\n    let csvContent = \"data:text/csv;charset=utf-8,\";\n\n    csvData.forEach(function(rowArray) {\n        let row = rowArray.join(\",\");\n        csvContent += row + \"\\r\\n\";\n    });\n    let encodedUri = encodeURI(csvContent);\n    //window.open(encodedUri);\n\n    let dl=document.createElement('a');\n    dl.download=participantID +'-'+ scoreID;\n    dl.href=encodedUri;\n    dl.click();\n\n};\n\n\nconst calculate =(eventID,playTimes,playedNotesArray,noteGroupFormatVariant,participantID,scoreID)=> {\n\n    let compTime = '';\n    let iniTime = '';\n    let caseNumber = 'please check manually';\n    let case2additional = '';\n    let idealNoteCounts = noteGroupFormatVariant[eventID].length/3;\n\n    console.log(idealNoteCounts);\n\n    if (playedNotesArray[eventID].indexOf(noteGroupFormatVariant[eventID]) === 0 )\n    {\n        caseNumber = '1';\n        compTime = playTimes[eventID][idealNoteCounts] - playTimes[eventID][0];\n        //[eventID][0]is image time.  [eventID][ideaNoteCount] is the last correct note in a x notes trial, for case 1. Where: x is the count of designed notes in a single round\n        iniTime = playTimes[eventID][1] - playTimes[eventID][0];\n        //[eventID][0]is image time.  [eventID][1] is the first correct note in a 2 notes trial, for case 1\n    }\n    else if ( playedNotesArray[eventID].indexOf(noteGroupFormatVariant[eventID]) > 0 )\n    {\n        caseNumber = '2';\n        case2additional = (playedNotesArray[eventID].indexOf(noteGroupFormatVariant[eventID]))/3;\n        compTime = playTimes[eventID][case2additional+idealNoteCounts] - playTimes[eventID][0];\n        iniTime = playTimes[eventID][case2additional+1] - playTimes[eventID][0];\n\n\n\n\n\n    }\n    else\n    {caseNumber = 'please check manually'}\n\n    return [eventID-1 + 'Calculation','Calculate the result of previous trial','','','','','',scoreID,noteGroupFormatVariant[eventID],playedNotesArray[eventID],caseNumber,case2additional,compTime,iniTime];\n\n};\n\n\nexport {saveCSV,calculate}\n","const dbWrite = () =>{\n    const low = require('lowdb');\n    const FileSync = require('lowdb/adapters/FileSync');\n\n    const adapter = new FileSync('db.json');\n    const db = low(adapter);\n\n// Set some defaults (required if your JSON file is empty)\n    db.defaults({ posts: [], user: {}, count: 0 })\n        .write();\n\n// Add a post\n    db.get('posts')\n        .push({ id: 1, title: 'lowdb is awesome'})\n        .write();\n\n// Set a user using Lodash shorthand syntax\n    db.set('user.name', 'typicode')\n        .write();\n\n// Increment count\n    db.update('count', n => n + 1)\n        .write();\n};\n\nexport {dbWrite}","import React from 'react';\nimport * as utilFunctions from './utilFunctions';\nimport * as EventRecorderDB from './EventRecorderDB';\n\nexport default class EventRecorder extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.timeoutID = [];\n        this.eventID=0;\n        this.playTimes=[[]];\n        this.playedNotesArray=[[]];\n\n        this.notes= [\"C1=\", \"C1#\", \"D1=\", \"D1#\", \"E1=\", \"F1=\", \"F1#\", \"G1=\", \"G1#\", \"A1=\", \"A1#\", \"B1=\",\n            \"C2=\", \"C2#\", \"D2=\", \"D2#\", \"E2=\", \"F2=\", \"F2#\", \"G2=\", \"G2#\", \"A2=\", \"A2#\", \"B2=\",\n            \"C3=\", \"C3#\", \"D3=\", \"D3#\", \"E3=\", \"F3=\", \"F3#\", \"G3=\", \"G3#\", \"A3=\", \"A3#\", \"B3=\",\n            \"C4=\", \"C4#\", \"D4=\", \"D4#\", \"E4=\", \"F4=\", \"F4#\", \"G4=\", \"G4#\", \"A4=\", \"A4#\", \"B4=\",\n            \"C5=\", \"C5#\", \"D5=\", \"D5#\", \"E5=\", \"F5=\", \"F5#\", \"G5=\", \"G5#\", \"A5=\", \"A5#\", \"B5=\",\n            \"C6=\", \"C6#\", \"D6=\", \"D6#\", \"E6=\", \"F6=\", \"F6#\", \"G6=\", \"G6#\", \"A6=\", \"A6#\", \"B6=\",\n            \"C7=\", \"C7#\", \"D7=\", \"D7#\", \"E7=\", \"F7=\", \"F7#\", \"G7=\", \"G7#\", \"A7=\", \"A7#\", \"B7=\"\n        ];\n        this.noteMap = [];\n        this.notes.map((currElement, index) => {\n            this.noteMap[index+24] = currElement;\n        });\n        this.state={\n            csvData:[\n                ['Event ID and name: ' ,'Behavior Name: ','Played Note: ','Velocity: ','Time(ms): ','Date: ','Participant ID','Test name','Notes shown on screen','Played notes','Case number','If case 2 - how many additional notes','if case 1 or case 2 - completion time','if case 1 or case 2 - initial response time'],\n                []\n            ]\n        };\n\n    }\n\n    initPlayeTimeAndNotesArray = (length) => {\n        EventRecorderDB.dbWrite();\n      for (let i=0;i<length+10;i++) {\n          this.playTimes.push([]);\n          this.playedNotesArray.push([]);\n          console.log(this.playedNotesArray)\n      }\n\n    };\n\n\n    clearAsyncFunctions= () =>{\n        let index = this.timeoutID.length;\n        while (index--) {\n            window.clearTimeout(this.timeoutID[index]);\n        }\n    };\n\n    clearCSV =() => {\n\n        this.playTimes=[[]];\n        this.playedNotesArray=[[]];\n        this.setState({\n            csvData:[\n                ['Event ID and name: ' ,'Behavior Name: ','Played Note: ','Velocity: ','Time(ms): ','Date: ','Participant ID','Test name','Notes shown on screen','Played notes','Case number','If case 2 - how many additional notes','if case 1 or case 2 - completion time','if case 1 or case 2 - initial response time'],\n                []\n            ]\n        });\n    };\n\n\n    appendScoreSetData = (participantID, scoreSet, ptKeyName, loopLocation, loopLength) => {\n\n        let location = parseInt(loopLocation);\n        let length = parseInt(loopLength);\n\n        for ( let i=location, accum=0, id=0; i< location+length; i++) {\n\n\n\n            this.timeoutID[id++]=setTimeout(()=>{\n\n\n\n                if (scoreSet[i][\"score\"] !== \"\") { // calculate after each cycle\n                    setTimeout(()=>{\n                        let tempArr2= this.state.csvData;\n\n                        tempArr2.push(utilFunctions.calculate(this.eventID-1,this.playTimes,this.playedNotesArray,scoreSet[0][\"noteGroupFormatVariant\"],participantID,scoreSet[0][\"scoreID\"]));\n                        this.setState({\n                            csvData:tempArr2,\n                        })\n                    },scoreSet[i+1][\"eventDuration\"]);\n                }\n\n                this.eventID = scoreSet[i][\"eventID\"];\n                this.playTimes[this.eventID][0] = performance.now()-scoreSet[i][\"eventDuration\"];\n                let tempArr= this.state.csvData;\n                tempArr.push([scoreSet[i][\"eventName\"],scoreSet[i][\"score\"],\"\",\"\",performance.now().toString(),Date(),participantID,scoreSet[0][\"scoreID\"]]);\n                this.setState({//update state that depends on previous state\n                    csvData:tempArr,\n                });\n\n                if (scoreSet[i+1][\"score\"]===-1){ // if this is the end of score bundle, save csv.\n                    setTimeout(()=>{\n                        utilFunctions.saveCSV(this.state.csvData,this.props.participantID,scoreSet[0][\"scoreID\"]);\n                        return null;\n                    },500);\n                }\n\n            },accum+=scoreSet[i][\"eventDuration\"]);\n        }\n    };\n\n    appendMIDIData = (event) => {\n\n        if (event.data.length === 3 && (event.data[0] === (145)||event.data[0] === (144)) && (event.data[2] !== 0)) {\n\n\n            let pNoteIndex = event.data[1];\n            let playedNote = this.noteMap[pNoteIndex];\n            let row = [\"Play\", event.data[0], playedNote, event.data[2], performance.now().toString(), Date()];\n            let tempArr3 = this.state.csvData;\n            tempArr3.push(row);\n            this.setState({\n                csvData:tempArr3\n            });\n\n            this.playedNotesArray[this.eventID] += playedNote;\n\n            let tempArr4 = this.playTimes[this.eventID];\n            tempArr4.push(performance.now());\n            this.playTimes[this.eventID]=tempArr4\n\n\n        }\n\n    };\n\n    recordData = (participantID, scoreSet, ptKeyName, loopLocation, loopLength, midiEvent) => {\n        if (!midiEvent) {\n            this.appendScoreSetData(participantID,scoreSet,ptKeyName,loopLocation,loopLength);\n        }\n        else {\n            this.appendMIDIData (midiEvent);\n            console.log(midiEvent)\n        }\n\n    };\n\n    shouldComponentUpdate(nextProps) {\n        return ((this.props.participantID === nextProps.participantID) && (this.props.hoverShow === nextProps.hoverShow));\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props !== prevProps ) { //we have to add condition here, to prevent infinity loop\n            if (this.props.reset === true) { //reset\n                console.log(\"clea true\");\n                this.clearAsyncFunctions();\n                this.clearCSV();\n            } else { //record\n                this.initPlayeTimeAndNotesArray(this.props.scoreSet.length);\n                this.recordData(this.props.participantID, this.props.scoreSet, this.props.ptKeyName, this.props.loopLocation, this.props.loopLength, this.props.midiEvent)\n            }\n        }\n    }\n\n    render () {\n        return (\n            <div id=\"eventRecorder\" >\n\n            </div>\n        )\n    }\n\n\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Button} from \"reactstrap\";\nimport {singleNoteCPosition, singleNoteGPosition, intervalCPositionSolid, intervalCPositionBroken} from \"../score/index\";\nimport CreateScoreWithBlanksLC from \"../logic/CreateScoreWithBlanksLC\";\nimport EventRecorder from \"../logic/EventRecorder\";\n//https://stackoverflow.com/questions/36683770/how-to-get-the-value-of-an-input-field-using-reactjs\n\nexport default class Header extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.scoreSetTemp = [];\n        this.reset=false;\n        this.keyLock = false;\n        this.midi = 0;\n        this.initMIDIAccess();\n\n        this.state = {\n            ptKeyName:\"\",\n            loopLocation:0,\n            loopLength:0,\n            scoreSet:[],\n            midiEvent:0,\n            participantID:'',\n            inputValue: '',\n            showing:true,\n            hoverShow: false,\n        };\n    }\n\n\n\n    initMIDIAccess = () => {\n        navigator.requestMIDIAccess().then(this.onSuccess, this.onFailure); //get midi access\n    };\n\n    onSuccess = (access) => {\n        this.midi = access;\n        let inputs = this.midi.inputs;\n\n        //connect to first device found\n        if (inputs.size > 0) {\n            let iterator = inputs.values(); // returns an iterator that loops over all inputs\n            let input = iterator.next().value; // get the first input\n            input.onmidimessage = this.handleMIDIMessage;\n        }\n    };\n\n    onFailure = (err) => {\n\n    };\n\n\n    scoreSetSwitcher = (elementID) => {\n        this.setState({\n            ptKeyName:\"\",\n            scoreSet:[]\n        });\n        this.reset=true;\n\n        switch(elementID) {\n\n            case singleNoteCPosition[0][\"scoreIDformatted\"]:\n\n                this.scoreSetTemp = singleNoteCPosition;\n                break;\n\n            case singleNoteGPosition[0][\"scoreIDformatted\"]:\n\n                this.scoreSetTemp = singleNoteGPosition;\n                break;\n\n            case intervalCPositionBroken[0][\"scoreIDformatted\"]:\n\n                this.scoreSetTemp = intervalCPositionBroken;\n                break;\n\n            case \"submitID\":\n\n\n                break;\n\n            case \"startNew\":\n                window.location.reload();\n\n\n                break;\n\n            case \"resetCurrent\":\n\n                this.setState({\n                    ptKeyName:\"\",\n                    scoreSet:[]\n                });\n                this.reset=true;\n                break;\n\n            default:\n                break;\n        }\n\n    };\n\n    handleMIDIMessage = (event) => {\n        this.setState({\n            midiEvent:event,\n        })\n    };\n\n\n    handleMouseDown = (event) => {\n\n        this.scoreSetSwitcher(event.target.id);\n    };\n\n    handleKeyDown = (event) => {\n\n        this.reset=false;\n\n        if (event.target.id === \"eee\" && event.key===\"Enter\") {\n            event.preventDefault();\n            this.setState({ showing: false });\n        }\n\n\n        for (let i=0;i<this.scoreSetTemp.length;i++)\n        {\n            if ((this.scoreSetTemp[i][\"ptKeyName\"] === event.key) && (!this.keyLock)){\n\n                console.log(\"lock\");\n\n                let loopLength = (() => {\n                    for (let j=i+1;j<this.scoreSetTemp.length+1;j++){\n                        if (this.scoreSetTemp[j][\"eventID\"]=== -99 ) {return j-i}\n                    }\n                })();\n\n\n                //lock up the keyboard for x secs, to prevent multiple press down\n                this.keyLock = true;\n                setTimeout(()=>{\n                    this.keyLock = false;\n                },3500);\n                //end of lock up\n                this.setState({\n                    ptKeyName: event.key,\n                    scoreSet:this.scoreSetTemp,\n                    loopLocation:i.toFixed(),\n                    loopLength:loopLength.toFixed(),\n                    midiEvent:0\n                });\n            }\n            else {\n                //console.log(this.keyLock)\n            }\n\n\n        }\n    };\n\n    updateInputValue(evt) {\n        this.setState({\n            inputValue: evt.target.value,\n            participantID:evt.target.value\n        });\n    }\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyDown);//global\n    }\n    componentWillUnmount() {\n    }\n\n    render() {\n        return (\n            <div >\n                <div style={{ opacity: (this.state.hoverShow ? '1' : '0') }} onMouseEnter={() => this.setState({ hoverShow: true }) } onMouseLeave={() => this.setState({ hoverShow: false }) }>\n                    <Button color=\"success\" id=\"startNew\" onClick={this.handleMouseDown}>New Participant</Button>\n                    &nbsp;\n                    <Button color=\"primary\" id={intervalCPositionBroken[0][\"scoreIDformatted\"]} onClick={this.handleMouseDown}>{intervalCPositionBroken[0][\"scoreID\"]}</Button>\n                    &nbsp;\n                    <Button color=\"primary\" id={singleNoteCPosition[0][\"scoreIDformatted\"]} onClick={this.handleMouseDown}>{singleNoteCPosition[0][\"scoreID\"]}</Button>\n                    &nbsp;\n                    <Button color=\"primary\" id={singleNoteGPosition[0][\"scoreIDformatted\"]} onClick={this.handleMouseDown}>{singleNoteGPosition[0][\"scoreID\"]}</Button>\n                    &nbsp;\n                    <Button color=\"secondary\" id=\"resetCurrent\" onClick={this.handleMouseDown}>Reset Current Round</Button>\n                    <br />\n                    <div>Current Participant: {this.state.inputValue}</div>\n                </div>\n\n                <div>\n                    <CreateScoreWithBlanksLC hoverShow={this.state.hoverShow} participantID={this.state.participantID} scoreSet={this.state.scoreSet} ptKeyName={this.state.ptKeyName} loopLocation={this.state.loopLocation} loopLength={this.state.loopLength} reset={this.reset}  midiEvent={this.state.midiEvent}/>\n                    <EventRecorder hoverShow={this.state.hoverShow} participantID={this.state.participantID} scoreSet={this.state.scoreSet} ptKeyName={this.state.ptKeyName} loopLocation={this.state.loopLocation} loopLength={this.state.loopLength} reset={this.reset} midiEvent={this.state.midiEvent}/>\n                    {console.log(\"pass\")}\n                </div>\n\n                <div style={{textAlign:'center', marginTop:'-25%',paddingTop:'25%', zIndex:'5', position:'relative', display: (this.state.showing ? 'block' : 'none')}} >\n\n                 <form>\n                    <label>\n                        Please enter participant ID:<br />\n                        <input id=\"eee\" type=\"text\" value={this.state.inputValue} onChange={evt => this.updateInputValue(evt)} />\n                    </label>\n\n                 </form>\n\n                 <Button\n                    id=\"submitID\"\n                    color=\"primary\"\n                    style={{ margin:'auto' }}\n                    onClick={() => this.setState({ showing: false })}\n                 >\n                    Submit\n                 </Button>\n                </div>\n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport CreateScoreWithBlanksLC from '../logic/CreateScoreWithBlanksLC.js'\n\nexport default class Body extends React.Component {\n\n\n    constructor(props){\n        super(props);\n    }\n   render(){\n        return (\n            <p>\n\n            </p>\n        );\n    }\n\n}\n\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './header/header.js';\nimport Body from \"./body/body\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n  render() {\n    return (\n      <div className=\"App\">\n\n          <Header />\n          <Body />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n//https://electronjs.org/docs/tutorial/application-packaging#adding-unpacked-files-in-asar-archive","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconsole.log(\"index.js loaded\");\nReactDOM.render(  <App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}